break out the data loading stuff into some kind of object that
takes requests and fetches the data, handles failures a little bit
more cleanly - like if something fails, either try again, or notify
the user of the problem and allow them to refresh.

if a request is failing, and something is clicked, what happens?
does it launch another request?  i'm kind of lost here.

i need software that will slow down the web and simulate a bad 
mobile phone internet link.

get lists of fonts so i can start on a settings screen.

event json is based on ics format, icalendar.
uid: id@sitedomain
organizers: [{ name: ..., mail:... }]
dtstart: use standard format
dtend: use standard format
summary:
description:
locations: [{ name:, street:, city:, zip: }]
tzid: // ISO timezone id

the css and settings features don't work on android 2.1. the entire
feature should be disabled for 2.1.  it seems to cause failures unrelated
to the styling.

dialogs should take up the screen - forget borders.  just a white panel with settings.

the reply box should be a massive box with editable text.

A new layout for articles, which looks more like medium.com should be done.  The author should pick a hero image, photo byline, and other features.  This can
be done by making a table for augmenting the webcast table.  Webcast needs
some field that will indicate that this otehr table should be consulted for a
decorator spec.  If a spec exists, an alternative page generator should be
used to generate the page.

This decorator has:
  - hero image
	- text styling features
	- social media descrptions
	- list of posts to combine into a photo gallery
	- hide email?
	- video player renderer
	- video url -> player renderer

