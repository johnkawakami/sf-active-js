break out the data loading stuff into some kind of object that
takes requests and fetches the data, handles failures a little bit
more cleanly - like if something fails, either try again, or notify
the user of the problem and allow them to refresh.

Events should be an ICS file, but a subset of the standard, because the standard is too difficult to use, particularly the timezones.

The libraries are too huge.  all.js is 335k.  all.min.js is 186k.  main.js is 20k, which isn't too bad.  Code organization sucks.

the css and settings features don't work on android 2.1. the entire
feature should be disabled for 2.1.  it seems to cause failures unrelated
to the styling.

the reply box should be a massive box with editable text.

A new layout for articles, which looks more like medium.com should be done.  The author should pick a hero image, photo byline, and other features.  This can
be done by making a table for augmenting the webcast table.  Webcast needs
some field that will indicate that this otehr table should be consulted for a
decorator spec.  If a spec exists, an alternative page generator should be
used to generate the page.

This decorator has:
  - hero image
	- text styling features
	- social media descrptions
	- list of posts to combine into a photo gallery
	- hide email?
	- video player renderer
	- video url -> player renderer

Need some API URLS:
/1/n/local - get list of latest local news
/1/n/breaking - get list of breaking news
/1/n/comments - get list of latest comments
/1/n/p/12345.html - permalink to a post
/1/c - get list of upcoming calendar events in ICS format
/1/c/p/12345.html - permalink to a calendar item
/1/f - get list of front-page features
/1/f/p/12345.html - permalink to a featured article
/1/flag - flag a post, use POST method
/1/reply - reply to a post, use POST method
/1/list/all - get all the lists in one

